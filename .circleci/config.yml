# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages

      # Download and cache dependencies
      - restore_cache:
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          command: |
            sudo pip install pipenv
            pipenv install

      - save_cache: # cache Python dependencies using checksum of Pipfile as the cache-key
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"

      # run tests!
      - run:
          name: run tests
          command: |
            pipenv run python manage.py collectstatic --clear --no-input
      - run:
          command: |
            pipenv run python manage.py test

      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: test-results
          destination: tr1

      - run: bash .circleci/setup-heroku.sh

      - add_ssh_keys:
                fingerprints:
                  - "3c:5e:f1:1a:b3:92:2b:0c:a2:58:cf:06:51:17:d0:ab "

      - deploy:
                name: Deploy Master to Heroku
                command: |
                  if [ "${CIRCLE_BRANCH}" == "master" ]; then
                    git push heroku master
                    # heroku:run python manage.py migrate
                    heroku restart
                  fi
